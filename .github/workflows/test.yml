name: Test
on: [push, pull_request]
jobs:
  all:
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: --deny warnings
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta]
    steps:
    - uses: hecrj/setup-rust-action@v2
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        export DEBIAN_FRONTED=noninteractive
        sudo apt-get -qq update
        sudo apt-get install -y libxkbcommon-dev libwayland-dev
    - name: Run tests
      run: |
        cargo test --verbose --features "winit wgpu svg canvas qr_code lazy debug tokio palette web-colors a11y"
        cargo test -p iced_accessibility
        cargo test -p iced_core
        cargo test -p iced_futures
        cargo test -p iced_graphics
        cargo test -p iced_renderer
        cargo test -p iced_runtime
        cargo test -p iced_tiny_skia
        cargo test -p iced_widget
        cargo test -p iced_wgpu
    - name: test wayland
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo test --verbose --features "wayland wgpu svg canvas qr_code lazy debug tokio palette web-colors a11y"
        cargo test -p iced_sctk

  web:
    runs-on: ubuntu-latest
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
        targets: wasm32-unknown-unknown
    - uses: actions/checkout@master
    - name: Run checks
      run: cargo check --package iced --target wasm32-unknown-unknown --no-default-features --features "winit"
    - name: Check compilation of `tour` example
      run: cargo build --package tour --target wasm32-unknown-unknown
    - name: Check compilation of `todos` example
      run: cargo build --package todos --target wasm32-unknown-unknown
    - name: Check compilation of `integration` example
      run: cargo build --package integration --target wasm32-unknown-unknown
